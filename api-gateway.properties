# Port pour l'API Gateway
server.port=8080 # Port commun pour les gateways

# Configuration pour que l'API Gateway s'enregistre auprès d'Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true # Préférer l'IP pour l'enregistrement sur Eureka

# Exemple de routes (on les affinera quand on aura des microservices)
# Pour l'instant, on peut faire une route de test vers un site externe
# ou vers le Config Server lui-même pour vérifier que le routage fonctionne.

spring.cloud.gateway.routes[0].id=config-server-route
spring.cloud.gateway.routes[0].uri=lb://CONFIG-SERVER # lb:// pour load-balanced via Eureka
spring.cloud.gateway.routes[0].predicates[0]=Path=/config/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/config/(?<segment>.*), /$\{segment}

# Une autre route de test vers un service externe
spring.cloud.gateway.routes[1].id=httpbin_route
spring.cloud.gateway.routes[1].uri=https://httpbin.org
spring.cloud.gateway.routes[1].predicates[0]=Path=/httpbin/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/httpbin/(?<segment>.*), /$\{segment}

# Permettre à la gateway de découvrir les services via Eureka
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true # Convertit les noms de service en minuscules pour les routes
